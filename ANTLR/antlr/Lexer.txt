lexer grammar ExprLexer;

AND : '&&' ;
OR : '||' ;
NOT : '!' ;
EQ : '=' ;
EQS : '==' ;
GREATER : '<' ;
GREATER_EQ : '<=' ;
SMALLER : '>' ;
SMALLER_EQ : '>=';
DIFF : '!=' ;
COMMA : ',' ;
SEMI : ';' ;
OPEN_PAREN : '(' ;
CLOSE_PAREN : ')' ;
OPEN_BRACKET : '[' ;
CLOSE_BRACKET : ']' ;
OPEN_CURLY : '{' ;
CLOSE_CURLY : '}' ;
DOT : '.' ;
COLON : ':' ;

IF : 'IF' ;
ELSE : 'ELSE' ;
WHILE : 'WHILE' ;
SELECT : 'SELECT' ;
PRINT : 'WRITE' ;
READ : 'READ' ;
BREAK : 'BREAK' ;
CASE : 'CASE' ; 
DEFAULT : 'DEFAULT' ;
PARAM : 'param' ;
VECTOR : 'VECTOR' ;
TYPE : 'TYPE' ;

M_FLOAT : 'float' ;
M_BOOLEAN : 'boolean' ;
M_INTEGER : 'integer' ;

START_FRAGMENT : 'FRAGMENT' ;
END_FRAGMENT : 'ENDFRAGMENT' ;

SUM : '+';
SUB : '-';
MUL : '*';
DIV : '/';

TRUE: 'TRUE';
FALSE: 'FALSE';

INT : [0-9]+ ;
NUM : INT ;
STRING : '"' ('""' | ~'"')* '"' ;
BOOLEAN : 'true' | 'false' ;
ID: [a-zA-Z_][a-zA-Z_0-9]* ;
WS: [ \t\n\r\f]+ -> skip ;

